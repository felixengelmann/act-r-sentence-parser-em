means <- with(pos9data, tapply(RT,IND=list(condition),mean))
means
stderr <- with(pos9data,tapply(RT,IND=list(condition),se))
stderr
tn <- with(pos9data,tapply(RT,IND=list(condition),length))
tn
tu <- with(pos9data,means + qt(.975,df=tn-1) * stderr)
tu
tl <- with(pos9data,means - qt(.975,df=tn-1) * stderr)
means <- means*1000
means
tu
tu <- tu*1000
tu
tl <- tl*1000
tl
cols
####################################################
### chunk number 1: #
####################################################
#
#a <- read.table("a.txt")#
#b <- read.table("b.txt")#
#c <- read.table("c.txt")#
#d <- read.table("d.txt")#
#e <- read.table("e.txt")#
#f <- read.table("f.txt")#
a <- read.table("a.completed")#
b <- read.table("b.completed")#
c <- read.table("c.completed")#
d <- read.table("d.completed")#
e <- read.table("e.completed")#
f <- read.table("f.completed")#
#
#
colnames(a) <- c("trial","word","position","condition","RT")#
colnames(b) <- c("trial","word","position","condition","RT")#
colnames(c) <- c("trial","word","position","condition","RT")#
colnames(d) <- c("trial","word","position","condition","RT")#
colnames(e) <- c("trial","word","position","condition","RT")#
colnames(f) <- c("trial","word","position","condition","RT")#
#
data <- rbind(a,b,c,d,e,f)#
#
#
####################################################
### chunk number 2: #
####################################################
#
pos9data <- subset(data,position==9)#
#
data.abc <- rbind(a,b,c)#
#
data$trial <- as.factor(data$trial)#
#
means <- with(pos9data, tapply(RT,IND=list(condition),mean))#
stderr <- with(pos9data,tapply(RT,IND=list(condition),se))#
tn <- with(pos9data,tapply(RT,IND=list(condition),length))#
tu <- with(pos9data,means + qt(.975,df=tn-1) * stderr)#
tl <- with(pos9data,means - qt(.975,df=tn-1) * stderr)#
#
#
####################################################
### chunk number 3: #
####################################################
#
means <- means*1000#
tu <- tu*1000#
tl <- tl*1000#
#
#hack for now#
#tu[3] <- tu[2]#
#tl[3] <- tl[2]#
#means[3] <- means[2]#
#
#
#
####################################################
### chunk number 4: #
####################################################
#
cols <-  gray(0:5 / 5)#
#
# barplot(t(means),#
#          beside=TRUE, #
#          ylim=range(0,600),#
#          col=cols,#
#         main="Total reading time model",#
#         axisnames=FALSE,#
##         names.arg=paste(c("pos"),rep(1:10,1),sep=""),#
#         cex.names=1.2,cex.lab=1.2)#
##
##
#initialx0 <- 1.5#
## for(col in c(1:6)){#
#   for(row in c(1:6)){#
#      arrows(initialx0,#
#          t(tu)[row],#
#          initialx0,#
#          t(tl)[row],#
#          angle=90,#
#          length=.025,#
#          code=3)#
#   initialx0 <- initialx0+2#
# }#end-for#
#   initialx0 <- initialx0+1#
#}#end-for#
#
#
#
####################################################
### chunk number 5: #
####################################################
datameans <- c(564.4274, 701.4310, 705.9175, 571.8799, 477.3900, 424.8824)#
datatu <- c(616.4060, 783.5852, 781.8033, 632.7439, 521.1400, 460.9614)#
datatl <- c(512.4489, 619.2768, 630.0317, 511.0159, 433.6401, 388.8034)#
#
modeldatameans <- rbind(means,datameans)#
modeldatatu <- rbind(tu,datatu)#
modeldatatl <- rbind(tl,datatl)#
#
 barplot(modeldatameans,#
          beside=TRUE, #
          ylim=range(0,800),#
#          col=cols,#
         main="Total reading time at polarity item: model versus data",#
#         axisnames=FALSE,#
         names.arg=letters[1:6],#
         xlab=c("Conditions"),#
         cex.names=1.2,cex.lab=1.2)#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   #for(row in c(1:2)){ # for model then for data#
   for(row in c(2:2)){ # for model then for data#
      arrows(#
          #initialx0,#
          initialx0+1,#
          modeldatatu[row,col],#
          #initialx0,#
          initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   #initialx0 <- initialx0+1#
   initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
#
#
 legend(18,750,#
               legend=c("model data", "human data"),#
               fill=c(1,0),#
               xjust=1)
tn
####################################################
### chunk number 1: #
####################################################
#
#a <- read.table("a.txt")#
#b <- read.table("b.txt")#
#c <- read.table("c.txt")#
#d <- read.table("d.txt")#
#e <- read.table("e.txt")#
#f <- read.table("f.txt")#
a <- read.table("a.completed")#
b <- read.table("b.completed")#
c <- read.table("c.completed")#
d <- read.table("d.completed")#
e <- read.table("e.completed")#
f <- read.table("f.completed")#
#
#
colnames(a) <- c("trial","word","position","condition","RT")#
colnames(b) <- c("trial","word","position","condition","RT")#
colnames(c) <- c("trial","word","position","condition","RT")#
colnames(d) <- c("trial","word","position","condition","RT")#
colnames(e) <- c("trial","word","position","condition","RT")#
colnames(f) <- c("trial","word","position","condition","RT")#
#
data <- rbind(a,b,c,d,e,f)#
#
#
####################################################
### chunk number 2: #
####################################################
#
pos9data <- subset(data,position==9)#
#
data.abc <- rbind(a,b,c)#
#
data$trial <- as.factor(data$trial)#
#
means <- with(pos9data, tapply(RT,IND=list(condition),mean))#
stderr <- with(pos9data,tapply(RT,IND=list(condition),se))#
tn <- with(pos9data,tapply(RT,IND=list(condition),length))#
tu <- with(pos9data,means + qt(.975,df=tn-1) * stderr)#
tl <- with(pos9data,means - qt(.975,df=tn-1) * stderr)#
#
#
####################################################
### chunk number 3: #
####################################################
#
means <- means*1000#
tu <- tu*1000#
tl <- tl*1000#
#
#hack for now#
#tu[3] <- tu[2]#
#tl[3] <- tl[2]#
#means[3] <- means[2]#
#
#
#
####################################################
### chunk number 4: #
####################################################
#
cols <-  gray(0:5 / 5)#
#
# barplot(t(means),#
#          beside=TRUE, #
#          ylim=range(0,600),#
#          col=cols,#
#         main="Total reading time model",#
#         axisnames=FALSE,#
##         names.arg=paste(c("pos"),rep(1:10,1),sep=""),#
#         cex.names=1.2,cex.lab=1.2)#
##
##
#initialx0 <- 1.5#
## for(col in c(1:6)){#
#   for(row in c(1:6)){#
#      arrows(initialx0,#
#          t(tu)[row],#
#          initialx0,#
#          t(tl)[row],#
#          angle=90,#
#          length=.025,#
#          code=3)#
#   initialx0 <- initialx0+2#
# }#end-for#
#   initialx0 <- initialx0+1#
#}#end-for#
#
#
#
####################################################
### chunk number 5: #
####################################################
datameans <- c(564.4274, 701.4310, 705.9175, 571.8799, 477.3900, 424.8824)#
datatu <- c(616.4060, 783.5852, 781.8033, 632.7439, 521.1400, 460.9614)#
datatl <- c(512.4489, 619.2768, 630.0317, 511.0159, 433.6401, 388.8034)#
#
modeldatameans <- rbind(means,datameans)#
modeldatatu <- rbind(tu,datatu)#
modeldatatl <- rbind(tl,datatl)#
#
 barplot(modeldatameans,#
          beside=TRUE, #
          ylim=range(0,800),#
#          col=cols,#
         main="Total reading time at polarity item: model versus data",#
#         axisnames=FALSE,#
         names.arg=letters[1:6],#
         xlab=c("Conditions"),#
         cex.names=1.2,cex.lab=1.2)#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   #for(row in c(1:2)){ # for model then for data#
   for(row in c(2:2)){ # for model then for data#
      arrows(#
          #initialx0,#
          initialx0+1,#
          modeldatatu[row,col],#
          #initialx0,#
          initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   #initialx0 <- initialx0+1#
   initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
#
#
 legend(18,750,#
               legend=c("model data", "human data"),#
               fill=c(1,0),#
               xjust=1)
means
actr6predictions <- means
v6pred <- means
actr6pred <- means
actr6pred
actr6pred$F <- 0.26
actr6pred
table(means)
list(means)
means
means[1]
cbind(means, means)
rbind(means, means)
cbind(means, c(0.26))
rbind(means, c(0.26))
rbind(means, means) -> m2
m2
rbind(m2, c(0.26))
cbind(m2, c(0.26))
m2[1]
m2[,1]
m2[1,]
m2
t <- c(0.26, 0.30, -0.6, 1, "off", 300)
t
colnames(t) <- c("F","noise","MD","PM","CC","runs")
data.frame(t)
data.frame(1:6)
data.frame(1:6, ncols=6)
help(data.frame)
table(t)
t
m2
cbind(m2,t)
rbind(m2,t)
cbind(means,0.26)
rbind(means,0.26)
cbind(means,0.26)
means$a
c(means,0.26)
c(means,t)
t
row <- c(means,0.26, 0.3,-0.6,1,"off",300)
row
v6pred <- row
rbind(v6pred,means)
colnames(v6pred) <- c("a","b","c","d","e","f","F","noise","MD","PM","CC","runs")
colnames(v6pred)
v6pred
data.frame(1:6)
data.frame(1:6, nrows=2)
data.frame(nrows=2)
data.frame(c(a:f))
data.frame(c(1:2))
data.frame(cbind(means))
data.frame(rbind(means))
data.frame(rbind(means)) -> v6pred
v6pred$a
v6pred
exp1 <- data.frame(rbind(means),F=0.26)
exp1
F=0.26
exp1 <- data.frame(F, rbind(means))
exp1
t
exp1 <- data.frame(F,noise,MD,MP,CC,runs,rbind(means))
F=0.26#
noise=0.3#
MD=-0.6#
MP=1#
CC="off"#
runs=300
exp1 <- data.frame(F,noise,MD,MP,CC,runs,rbind(means))
exp1
exp1 <- data.frame(F,noise,MD,MP,CC,runs,rbind(means),row.name=null)
exp1 <- data.frame(F,noise,MD,MP,CC,runs,rbind(means),row.name=F)
exp1
exp1 <- data.frame(F,noise,MD,MP,CC,runs,rbind(means),row.names=F)
exp1
exp1 <- data.frame(F,noise,MD,MP,CC,runs,rbind(means),row.names=1)
exp1
exp1 <- data.frame(F,noise,MD,MP,CC,runs,rbind(means),row.names=NULL)
exp1
v6pred <- exp1
exp <- data.frame(F,noise,MD,MP,CC,runs,rbind(means),row.names=NULL)
cbind(v6pred, values)
values <- data.frame(F,noise,MD,MP,CC,runs,rbind(means),row.names=NULL)
cbind(v6pred, values)
rbind(v6pred, values)
values <- data.frame(F,noise,MD,MP,CC,runs,rbind(means),row.names=NULL)
v6pred
write.table(v6pred,"v6pred.DAT")
write.table(v6pred,"v6pred.DAT.txt")
write.table(v6pred,"v6pred.data.txt")
write.table(v6pred,"v6pred.data.txt",sep="\t",row.name=F)
write.table(v6pred,"v6pred.data.txt",sep="\t",row.names=F)
####################################################
### chunk number 1: #
####################################################
#
#a <- read.table("a.txt")#
#b <- read.table("b.txt")#
#c <- read.table("c.txt")#
#d <- read.table("d.txt")#
#e <- read.table("e.txt")#
#f <- read.table("f.txt")#
a <- read.table("a.completed")#
b <- read.table("b.completed")#
c <- read.table("c.completed")#
d <- read.table("d.completed")#
e <- read.table("e.completed")#
f <- read.table("f.completed")#
#
#
colnames(a) <- c("trial","word","position","condition","RT")#
colnames(b) <- c("trial","word","position","condition","RT")#
colnames(c) <- c("trial","word","position","condition","RT")#
colnames(d) <- c("trial","word","position","condition","RT")#
colnames(e) <- c("trial","word","position","condition","RT")#
colnames(f) <- c("trial","word","position","condition","RT")#
#
data <- rbind(a,b,c,d,e,f)#
#
#
####################################################
### chunk number 2: #
####################################################
#
pos9data <- subset(data,position==9)#
#
data.abc <- rbind(a,b,c)#
#
data$trial <- as.factor(data$trial)#
#
means <- with(pos9data, tapply(RT,IND=list(condition),mean))#
stderr <- with(pos9data,tapply(RT,IND=list(condition),se))#
tn <- with(pos9data,tapply(RT,IND=list(condition),length))#
tu <- with(pos9data,means + qt(.975,df=tn-1) * stderr)#
tl <- with(pos9data,means - qt(.975,df=tn-1) * stderr)#
#
#
####################################################
### chunk number 3: #
####################################################
#
means <- means*1000#
tu <- tu*1000#
tl <- tl*1000#
#
#hack for now#
#tu[3] <- tu[2]#
#tl[3] <- tl[2]#
#means[3] <- means[2]#
#
#
#
####################################################
### chunk number 4: #
####################################################
#
cols <-  gray(0:5 / 5)#
#
# barplot(t(means),#
#          beside=TRUE, #
#          ylim=range(0,600),#
#          col=cols,#
#         main="Total reading time model",#
#         axisnames=FALSE,#
##         names.arg=paste(c("pos"),rep(1:10,1),sep=""),#
#         cex.names=1.2,cex.lab=1.2)#
##
##
#initialx0 <- 1.5#
## for(col in c(1:6)){#
#   for(row in c(1:6)){#
#      arrows(initialx0,#
#          t(tu)[row],#
#          initialx0,#
#          t(tl)[row],#
#          angle=90,#
#          length=.025,#
#          code=3)#
#   initialx0 <- initialx0+2#
# }#end-for#
#   initialx0 <- initialx0+1#
#}#end-for#
#
#
#
####################################################
### chunk number 5: #
####################################################
datameans <- c(564.4274, 701.4310, 705.9175, 571.8799, 477.3900, 424.8824)#
datatu <- c(616.4060, 783.5852, 781.8033, 632.7439, 521.1400, 460.9614)#
datatl <- c(512.4489, 619.2768, 630.0317, 511.0159, 433.6401, 388.8034)#
#
modeldatameans <- rbind(means,datameans)#
modeldatatu <- rbind(tu,datatu)#
modeldatatl <- rbind(tl,datatl)#
#
 barplot(modeldatameans,#
          beside=TRUE, #
          ylim=range(0,800),#
#          col=cols,#
         main="Total reading time at polarity item: model versus data",#
#         axisnames=FALSE,#
         names.arg=letters[1:6],#
         xlab=c("Conditions"),#
         cex.names=1.2,cex.lab=1.2)#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   #for(row in c(1:2)){ # for model then for data#
   for(row in c(2:2)){ # for model then for data#
      arrows(#
          #initialx0,#
          initialx0+1,#
          modeldatatu[row,col],#
          #initialx0,#
          initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   #initialx0 <- initialx0+1#
   initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
#
#
 legend(18,750,#
               legend=c("model data", "human data"),#
               fill=c(1,0),#
               xjust=1)
F=0.26#
noise=0.45#
MD=-0.6#
MP=1#
CC="off"#
runs=500#
#
values <- data.frame(F,noise,MD,MP,CC,runs,rbind(means),row.names=NULL)
rbind(v6pred, values)
v6pred <- rbind(v6pred, values)
write.table(v6pred,"v6pred.data.txt",sep="\t",row.names=FALSE,append=TRUE)
help(write.table)
####################################################
### chunk number 1: #
####################################################
#
#a <- read.table("a.txt")#
#b <- read.table("b.txt")#
#c <- read.table("c.txt")#
#d <- read.table("d.txt")#
#e <- read.table("e.txt")#
#f <- read.table("f.txt")#
a <- read.table("a.completed")#
b <- read.table("b.completed")#
c <- read.table("c.completed")#
d <- read.table("d.completed")#
e <- read.table("e.completed")#
f <- read.table("f.completed")#
#
#
colnames(a) <- c("trial","word","position","condition","RT")#
colnames(b) <- c("trial","word","position","condition","RT")#
colnames(c) <- c("trial","word","position","condition","RT")#
colnames(d) <- c("trial","word","position","condition","RT")#
colnames(e) <- c("trial","word","position","condition","RT")#
colnames(f) <- c("trial","word","position","condition","RT")#
#
data <- rbind(a,b,c,d,e,f)#
#
#
####################################################
### chunk number 2: #
####################################################
#
pos9data <- subset(data,position==9)#
#
data.abc <- rbind(a,b,c)#
#
data$trial <- as.factor(data$trial)#
#
means <- with(pos9data, tapply(RT,IND=list(condition),mean))#
stderr <- with(pos9data,tapply(RT,IND=list(condition),se))#
tn <- with(pos9data,tapply(RT,IND=list(condition),length))#
tu <- with(pos9data,means + qt(.975,df=tn-1) * stderr)#
tl <- with(pos9data,means - qt(.975,df=tn-1) * stderr)#
#
#
####################################################
### chunk number 3: #
####################################################
#
means <- means*1000#
tu <- tu*1000#
tl <- tl*1000#
#
#hack for now#
#tu[3] <- tu[2]#
#tl[3] <- tl[2]#
#means[3] <- means[2]#
#
#
#
####################################################
### chunk number 4: #
####################################################
#
cols <-  gray(0:5 / 5)#
#
# barplot(t(means),#
#          beside=TRUE, #
#          ylim=range(0,600),#
#          col=cols,#
#         main="Total reading time model",#
#         axisnames=FALSE,#
##         names.arg=paste(c("pos"),rep(1:10,1),sep=""),#
#         cex.names=1.2,cex.lab=1.2)#
##
##
#initialx0 <- 1.5#
## for(col in c(1:6)){#
#   for(row in c(1:6)){#
#      arrows(initialx0,#
#          t(tu)[row],#
#          initialx0,#
#          t(tl)[row],#
#          angle=90,#
#          length=.025,#
#          code=3)#
#   initialx0 <- initialx0+2#
# }#end-for#
#   initialx0 <- initialx0+1#
#}#end-for#
#
#
#
####################################################
### chunk number 5: #
####################################################
datameans <- c(564.4274, 701.4310, 705.9175, 571.8799, 477.3900, 424.8824)#
datatu <- c(616.4060, 783.5852, 781.8033, 632.7439, 521.1400, 460.9614)#
datatl <- c(512.4489, 619.2768, 630.0317, 511.0159, 433.6401, 388.8034)#
#
modeldatameans <- rbind(means,datameans)#
modeldatatu <- rbind(tu,datatu)#
modeldatatl <- rbind(tl,datatl)#
#
 barplot(modeldatameans,#
          beside=TRUE, #
          ylim=range(0,800),#
#          col=cols,#
         main="Total reading time at polarity item: model versus data",#
#         axisnames=FALSE,#
         names.arg=letters[1:6],#
         xlab=c("Conditions"),#
         cex.names=1.2,cex.lab=1.2)#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   #for(row in c(1:2)){ # for model then for data#
   for(row in c(2:2)){ # for model then for data#
      arrows(#
          #initialx0,#
          initialx0+1,#
          modeldatatu[row,col],#
          #initialx0,#
          initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   #initialx0 <- initialx0+1#
   initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
#
#
 legend(18,750,#
               legend=c("model data", "human data"),#
               fill=c(1,0),#
               xjust=1)
tn
F=0.30#
noise=0.45#
MD=-0.6#
MP=1#
CC="off"#
runs=500
values <- data.frame(F,noise,MD,MP,CC,runs,rbind(means),row.names=NULL)
v6pred <- rbind(v6pred, values)
write.table(v6pred,"v6pred.data.txt",sep="\t",row.names=FALSE,append=TRUE,col.names=FALSE)
write.table(v6pred,"v6pred.data.txt",sep="\t",row.names=FALSE,append=TRUE,col.names=T)
write.table(v6pred,"v6pred.data.txt",sep="\t",row.names=FALSE,append=TRUE)
write.table(v6pred,"v6pred.data.txt",sep="\t",row.names=FALSE,append=TRUE,col.names=FALSE)
####################################################
### chunk number 1: #
####################################################
#
#a <- read.table("a.txt")#
#b <- read.table("b.txt")#
#c <- read.table("c.txt")#
#d <- read.table("d.txt")#
#e <- read.table("e.txt")#
#f <- read.table("f.txt")#
a <- read.table("a.completed")#
b <- read.table("b.completed")#
c <- read.table("c.completed")#
d <- read.table("d.completed")#
e <- read.table("e.completed")#
f <- read.table("f.completed")#
#
#
colnames(a) <- c("trial","word","position","condition","RT")#
colnames(b) <- c("trial","word","position","condition","RT")#
colnames(c) <- c("trial","word","position","condition","RT")#
colnames(d) <- c("trial","word","position","condition","RT")#
colnames(e) <- c("trial","word","position","condition","RT")#
colnames(f) <- c("trial","word","position","condition","RT")#
#
data <- rbind(a,b,c,d,e,f)#
#
#
####################################################
### chunk number 2: #
####################################################
#
pos9data <- subset(data,position==9)#
#
data.abc <- rbind(a,b,c)#
#
data$trial <- as.factor(data$trial)#
#
means <- with(pos9data, tapply(RT,IND=list(condition),mean))#
stderr <- with(pos9data,tapply(RT,IND=list(condition),se))#
tn <- with(pos9data,tapply(RT,IND=list(condition),length))#
tu <- with(pos9data,means + qt(.975,df=tn-1) * stderr)#
tl <- with(pos9data,means - qt(.975,df=tn-1) * stderr)#
#
#
####################################################
### chunk number 3: #
####################################################
#
means <- means*1000#
tu <- tu*1000#
tl <- tl*1000#
#
#hack for now#
#tu[3] <- tu[2]#
#tl[3] <- tl[2]#
#means[3] <- means[2]#
#
#
#
####################################################
### chunk number 4: #
####################################################
#
cols <-  gray(0:5 / 5)#
#
# barplot(t(means),#
#          beside=TRUE, #
#          ylim=range(0,600),#
#          col=cols,#
#         main="Total reading time model",#
#         axisnames=FALSE,#
##         names.arg=paste(c("pos"),rep(1:10,1),sep=""),#
#         cex.names=1.2,cex.lab=1.2)#
##
##
#initialx0 <- 1.5#
## for(col in c(1:6)){#
#   for(row in c(1:6)){#
#      arrows(initialx0,#
#          t(tu)[row],#
#          initialx0,#
#          t(tl)[row],#
#          angle=90,#
#          length=.025,#
#          code=3)#
#   initialx0 <- initialx0+2#
# }#end-for#
#   initialx0 <- initialx0+1#
#}#end-for#
#
#
#
####################################################
### chunk number 5: #
####################################################
datameans <- c(564.4274, 701.4310, 705.9175, 571.8799, 477.3900, 424.8824)#
datatu <- c(616.4060, 783.5852, 781.8033, 632.7439, 521.1400, 460.9614)#
datatl <- c(512.4489, 619.2768, 630.0317, 511.0159, 433.6401, 388.8034)#
#
modeldatameans <- rbind(means,datameans)#
modeldatatu <- rbind(tu,datatu)#
modeldatatl <- rbind(tl,datatl)#
#
 barplot(modeldatameans,#
          beside=TRUE, #
          ylim=range(0,800),#
#          col=cols,#
         main="Total reading time at polarity item: model versus data",#
#         axisnames=FALSE,#
         names.arg=letters[1:6],#
         xlab=c("Conditions"),#
         cex.names=1.2,cex.lab=1.2)#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   #for(row in c(1:2)){ # for model then for data#
   for(row in c(2:2)){ # for model then for data#
      arrows(#
          #initialx0,#
          initialx0+1,#
          modeldatatu[row,col],#
          #initialx0,#
          initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   #initialx0 <- initialx0+1#
   initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
#
#
 legend(18,750,#
               legend=c("model data", "human data"),#
               fill=c(1,0),#
               xjust=1)#
#
#
############
F=0.30#
noise=0.45#
MD=-0.6#
MP=1#
CC="off"#
runs=500#
#
values <- data.frame(F,noise,MD,MP,CC,runs,rbind(means),row.names=NULL)#
write.table(values,"v6pred.data.txt",sep="\t",row.names=FALSE,append=TRUE,col.names=FALSE)#
#v6pred <- exp1
F=0.30#
noise=0.30#
MD=-0.6#
MP=1#
CC="off"#
runs=500
values <- data.frame(F,noise,MD,MP,CC,runs,rbind(means),row.names=NULL)
write.table(values,"v6pred.data.txt",sep="\t",row.names=FALSE,append=TRUE,col.names=FALSE)
####################################################
### chunk number 1: #
####################################################
#
#a <- read.table("a.txt")#
#b <- read.table("b.txt")#
#c <- read.table("c.txt")#
#d <- read.table("d.txt")#
#e <- read.table("e.txt")#
#f <- read.table("f.txt")#
a <- read.table("a.completed")#
b <- read.table("b.completed")#
c <- read.table("c.completed")#
d <- read.table("d.completed")#
e <- read.table("e.completed")#
f <- read.table("f.completed")#
#
#
colnames(a) <- c("trial","word","position","condition","RT")#
colnames(b) <- c("trial","word","position","condition","RT")#
colnames(c) <- c("trial","word","position","condition","RT")#
colnames(d) <- c("trial","word","position","condition","RT")#
colnames(e) <- c("trial","word","position","condition","RT")#
colnames(f) <- c("trial","word","position","condition","RT")#
#
data <- rbind(a,b,c,d,e,f)#
#
#
####################################################
### chunk number 2: #
####################################################
#
pos9data <- subset(data,position==9)#
#
data.abc <- rbind(a,b,c)#
#
data$trial <- as.factor(data$trial)#
#
means <- with(pos9data, tapply(RT,IND=list(condition),mean))#
stderr <- with(pos9data,tapply(RT,IND=list(condition),se))#
tn <- with(pos9data,tapply(RT,IND=list(condition),length))#
tu <- with(pos9data,means + qt(.975,df=tn-1) * stderr)#
tl <- with(pos9data,means - qt(.975,df=tn-1) * stderr)#
#
#
####################################################
### chunk number 3: #
####################################################
#
means <- means*1000#
tu <- tu*1000#
tl <- tl*1000#
#
#hack for now#
#tu[3] <- tu[2]#
#tl[3] <- tl[2]#
#means[3] <- means[2]#
#
#
#
####################################################
### chunk number 4: #
####################################################
#
cols <-  gray(0:5 / 5)#
#
# barplot(t(means),#
#          beside=TRUE, #
#          ylim=range(0,600),#
#          col=cols,#
#         main="Total reading time model",#
#         axisnames=FALSE,#
##         names.arg=paste(c("pos"),rep(1:10,1),sep=""),#
#         cex.names=1.2,cex.lab=1.2)#
##
##
#initialx0 <- 1.5#
## for(col in c(1:6)){#
#   for(row in c(1:6)){#
#      arrows(initialx0,#
#          t(tu)[row],#
#          initialx0,#
#          t(tl)[row],#
#          angle=90,#
#          length=.025,#
#          code=3)#
#   initialx0 <- initialx0+2#
# }#end-for#
#   initialx0 <- initialx0+1#
#}#end-for#
#
#
#
####################################################
### chunk number 5: #
####################################################
datameans <- c(564.4274, 701.4310, 705.9175, 571.8799, 477.3900, 424.8824)#
datatu <- c(616.4060, 783.5852, 781.8033, 632.7439, 521.1400, 460.9614)#
datatl <- c(512.4489, 619.2768, 630.0317, 511.0159, 433.6401, 388.8034)#
#
modeldatameans <- rbind(means,datameans)#
modeldatatu <- rbind(tu,datatu)#
modeldatatl <- rbind(tl,datatl)#
#
 barplot(modeldatameans,#
          beside=TRUE, #
          ylim=range(0,800),#
#          col=cols,#
         main="Total reading time at polarity item: model versus data",#
#         axisnames=FALSE,#
         names.arg=letters[1:6],#
         xlab=c("Conditions"),#
         cex.names=1.2,cex.lab=1.2)#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   #for(row in c(1:2)){ # for model then for data#
   for(row in c(2:2)){ # for model then for data#
      arrows(#
          #initialx0,#
          initialx0+1,#
          modeldatatu[row,col],#
          #initialx0,#
          initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   #initialx0 <- initialx0+1#
   initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
#
#
 legend(18,750,#
               legend=c("model data", "human data"),#
               fill=c(1,0),#
               xjust=1)
tn
#
 barplot(modeldatameans,#
          beside=TRUE, #
          ylim=range(0,800),#
#          col=cols,#
         main="Total reading time at polarity item: model versus data",#
#         axisnames=FALSE,#
         names.arg=letters[1:6],#
         xlab=c("Conditions"),#
         cex.names=1.2,cex.lab=1.2)#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   #for(row in c(1:2)){ # for model then for data#
   for(row in c(2:2)){ # for model then for data#
      arrows(#
          #initialx0,#
          initialx0+1,#
          modeldatatu[row,col],#
          #initialx0,#
          initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   #initialx0 <- initialx0+1#
   initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
#
#
 legend(18,750,#
               legend=c("model data", "human data"),#
               fill=c(1,0),#
               xjust=1)
F=0.30#
noise=0.45#
MD=-0.6#
MP=1#
CC="off"#
runs=500
values <- data.frame(F,noise,MD,MP,CC,runs,rbind(means),row.names=NULL)#
write.table(values,"v6pred.data.txt",sep="\t",row.names=FALSE,append=TRUE,col.names=FALSE)#
#v6pred <- exp1
####################################################
### chunk number 1: #
####################################################
#
#a <- read.table("a.txt")#
#b <- read.table("b.txt")#
#c <- read.table("c.txt")#
#d <- read.table("d.txt")#
#e <- read.table("e.txt")#
#f <- read.table("f.txt")#
a <- read.table("a.completed")#
b <- read.table("b.completed")#
c <- read.table("c.completed")#
d <- read.table("d.completed")#
e <- read.table("e.completed")#
f <- read.table("f.completed")#
#
#
colnames(a) <- c("trial","word","position","condition","RT")#
colnames(b) <- c("trial","word","position","condition","RT")#
colnames(c) <- c("trial","word","position","condition","RT")#
colnames(d) <- c("trial","word","position","condition","RT")#
colnames(e) <- c("trial","word","position","condition","RT")#
colnames(f) <- c("trial","word","position","condition","RT")#
#
data <- rbind(a,b,c,d,e,f)#
#
#
####################################################
### chunk number 2: #
####################################################
#
pos9data <- subset(data,position==9)#
#
data.abc <- rbind(a,b,c)#
#
data$trial <- as.factor(data$trial)#
#
means <- with(pos9data, tapply(RT,IND=list(condition),mean))#
stderr <- with(pos9data,tapply(RT,IND=list(condition),se))#
tn <- with(pos9data,tapply(RT,IND=list(condition),length))#
tu <- with(pos9data,means + qt(.975,df=tn-1) * stderr)#
tl <- with(pos9data,means - qt(.975,df=tn-1) * stderr)#
#
#
####################################################
### chunk number 3: #
####################################################
#
means <- means*1000#
tu <- tu*1000#
tl <- tl*1000#
#
#hack for now#
#tu[3] <- tu[2]#
#tl[3] <- tl[2]#
#means[3] <- means[2]#
#
#
#
####################################################
### chunk number 4: #
####################################################
#
cols <-  gray(0:5 / 5)#
#
# barplot(t(means),#
#          beside=TRUE, #
#          ylim=range(0,600),#
#          col=cols,#
#         main="Total reading time model",#
#         axisnames=FALSE,#
##         names.arg=paste(c("pos"),rep(1:10,1),sep=""),#
#         cex.names=1.2,cex.lab=1.2)#
##
##
#initialx0 <- 1.5#
## for(col in c(1:6)){#
#   for(row in c(1:6)){#
#      arrows(initialx0,#
#          t(tu)[row],#
#          initialx0,#
#          t(tl)[row],#
#          angle=90,#
#          length=.025,#
#          code=3)#
#   initialx0 <- initialx0+2#
# }#end-for#
#   initialx0 <- initialx0+1#
#}#end-for#
#
#
#
####################################################
### chunk number 5: #
####################################################
datameans <- c(564.4274, 701.4310, 705.9175, 571.8799, 477.3900, 424.8824)#
datatu <- c(616.4060, 783.5852, 781.8033, 632.7439, 521.1400, 460.9614)#
datatl <- c(512.4489, 619.2768, 630.0317, 511.0159, 433.6401, 388.8034)#
#
modeldatameans <- rbind(means,datameans)#
modeldatatu <- rbind(tu,datatu)#
modeldatatl <- rbind(tl,datatl)#
#
 barplot(modeldatameans,#
          beside=TRUE, #
          ylim=range(0,800),#
#          col=cols,#
         main="Total reading time at polarity item: model versus data",#
#         axisnames=FALSE,#
         names.arg=letters[1:6],#
         xlab=c("Conditions"),#
         cex.names=1.2,cex.lab=1.2)#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   #for(row in c(1:2)){ # for model then for data#
   for(row in c(2:2)){ # for model then for data#
      arrows(#
          #initialx0,#
          initialx0+1,#
          modeldatatu[row,col],#
          #initialx0,#
          initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   #initialx0 <- initialx0+1#
   initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
#
#
 legend(18,750,#
               legend=c("model data", "human data"),#
               fill=c(1,0),#
               xjust=1)
#
############
F=0.26#
noise=0.30#
MD=-0.6#
MP=1#
CC="on"#
runs=500#
#
values <- data.frame(F,noise,MD,MP,CC,runs,rbind(means),row.names=NULL)#
write.table(values,"v6pred.data.txt",sep="\t",row.names=FALSE,append=TRUE,col.names=FALSE)#
#v6pred <- exp1
write.table(values,"v6pred.data",sep="\t",row.names=FALSE,append=TRUE,col.names=FALSE)#
#v6pred <- exp1
a <- read.table("a.completed")#
b <- read.table("b.completed")#
c <- read.table("c.completed")#
d <- read.table("d.completed")#
e <- read.table("e.completed")#
f <- read.table("f.completed")
#
colnames(a) <- c("trial","word","position","condition","RT")#
colnames(b) <- c("trial","word","position","condition","RT")#
colnames(c) <- c("trial","word","position","condition","RT")#
colnames(d) <- c("trial","word","position","condition","RT")#
colnames(e) <- c("trial","word","position","condition","RT")#
colnames(f) <- c("trial","word","position","condition","RT")#
#
data <- rbind(a,b,c,d,e,f)#
#
#
####################################################
### chunk number 2: #
####################################################
#
pos9data <- subset(data,position==9)#
#
data.abc <- rbind(a,b,c)#
#
data$trial <- as.factor(data$trial)#
#
means <- with(pos9data, tapply(RT,IND=list(condition),mean))#
stderr <- with(pos9data,tapply(RT,IND=list(condition),se))#
tn <- with(pos9data,tapply(RT,IND=list(condition),length))#
tu <- with(pos9data,means + qt(.975,df=tn-1) * stderr)#
tl <- with(pos9data,means - qt(.975,df=tn-1) * stderr)#
#
#
####################################################
### chunk number 3: #
####################################################
#
means <- means*1000#
tu <- tu*1000#
tl <- tl*1000#
#
#hack for now#
#tu[3] <- tu[2]#
#tl[3] <- tl[2]#
#means[3] <- means[2]#
#
#
#
####################################################
### chunk number 4: #
####################################################
#
cols <-  gray(0:5 / 5)#
#
# barplot(t(means),#
#          beside=TRUE, #
#          ylim=range(0,600),#
#          col=cols,#
#         main="Total reading time model",#
#         axisnames=FALSE,#
##         names.arg=paste(c("pos"),rep(1:10,1),sep=""),#
#         cex.names=1.2,cex.lab=1.2)#
##
##
#initialx0 <- 1.5#
## for(col in c(1:6)){#
#   for(row in c(1:6)){#
#      arrows(initialx0,#
#          t(tu)[row],#
#          initialx0,#
#          t(tl)[row],#
#          angle=90,#
#          length=.025,#
#          code=3)#
#   initialx0 <- initialx0+2#
# }#end-for#
#   initialx0 <- initialx0+1#
#}#end-for#
#
#
#
####################################################
### chunk number 5: #
####################################################
datameans <- c(564.4274, 701.4310, 705.9175, 571.8799, 477.3900, 424.8824)#
datatu <- c(616.4060, 783.5852, 781.8033, 632.7439, 521.1400, 460.9614)#
datatl <- c(512.4489, 619.2768, 630.0317, 511.0159, 433.6401, 388.8034)#
#
modeldatameans <- rbind(means,datameans)#
modeldatatu <- rbind(tu,datatu)#
modeldatatl <- rbind(tl,datatl)#
#
 barplot(modeldatameans,#
          beside=TRUE, #
          ylim=range(0,800),#
#          col=cols,#
         main="Total reading time at polarity item: model versus data",#
#         axisnames=FALSE,#
         names.arg=letters[1:6],#
         xlab=c("Conditions"),#
         cex.names=1.2,cex.lab=1.2)#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   #for(row in c(1:2)){ # for model then for data#
   for(row in c(2:2)){ # for model then for data#
      arrows(#
          #initialx0,#
          initialx0+1,#
          modeldatatu[row,col],#
          #initialx0,#
          initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   #initialx0 <- initialx0+1#
   initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
#
#
 legend(18,750,#
               legend=c("model data", "human data"),#
               fill=c(1,0),#
               xjust=1)
F=0.26#
noise=0.30#
MD=-0.6#
MP=1#
CC="on"#
runs=500
values <- data.frame(F,noise,MD,MP,CC,runs,rbind(means),row.names=NULL)#
write.table(values,"v6pred.data",sep="\t",row.names=FALSE,append=TRUE,col.names=FALSE)
####################################################
### chunk number 1: #
####################################################
#
#a <- read.table("a.txt")#
#b <- read.table("b.txt")#
#c <- read.table("c.txt")#
#d <- read.table("d.txt")#
#e <- read.table("e.txt")#
#f <- read.table("f.txt")#
a <- read.table("a.completed")#
b <- read.table("b.completed")#
c <- read.table("c.completed")#
d <- read.table("d.completed")#
e <- read.table("e.completed")#
f <- read.table("f.completed")#
#
#
colnames(a) <- c("trial","word","position","condition","RT")#
colnames(b) <- c("trial","word","position","condition","RT")#
colnames(c) <- c("trial","word","position","condition","RT")#
colnames(d) <- c("trial","word","position","condition","RT")#
colnames(e) <- c("trial","word","position","condition","RT")#
colnames(f) <- c("trial","word","position","condition","RT")#
#
data <- rbind(a,b,c,d,e,f)#
#
#
####################################################
### chunk number 2: #
####################################################
#
pos9data <- subset(data,position==9)#
#
data.abc <- rbind(a,b,c)#
#
data$trial <- as.factor(data$trial)#
#
means <- with(pos9data, tapply(RT,IND=list(condition),mean))#
stderr <- with(pos9data,tapply(RT,IND=list(condition),se))#
tn <- with(pos9data,tapply(RT,IND=list(condition),length))#
tu <- with(pos9data,means + qt(.975,df=tn-1) * stderr)#
tl <- with(pos9data,means - qt(.975,df=tn-1) * stderr)#
#
#
####################################################
### chunk number 3: #
####################################################
#
means <- means*1000#
tu <- tu*1000#
tl <- tl*1000#
#
#hack for now#
#tu[3] <- tu[2]#
#tl[3] <- tl[2]#
#means[3] <- means[2]#
#
#
#
####################################################
### chunk number 4: #
####################################################
#
cols <-  gray(0:5 / 5)#
#
# barplot(t(means),#
#          beside=TRUE, #
#          ylim=range(0,600),#
#          col=cols,#
#         main="Total reading time model",#
#         axisnames=FALSE,#
##         names.arg=paste(c("pos"),rep(1:10,1),sep=""),#
#         cex.names=1.2,cex.lab=1.2)#
##
##
#initialx0 <- 1.5#
## for(col in c(1:6)){#
#   for(row in c(1:6)){#
#      arrows(initialx0,#
#          t(tu)[row],#
#          initialx0,#
#          t(tl)[row],#
#          angle=90,#
#          length=.025,#
#          code=3)#
#   initialx0 <- initialx0+2#
# }#end-for#
#   initialx0 <- initialx0+1#
#}#end-for#
#
#
#
####################################################
### chunk number 5: #
####################################################
datameans <- c(564.4274, 701.4310, 705.9175, 571.8799, 477.3900, 424.8824)#
datatu <- c(616.4060, 783.5852, 781.8033, 632.7439, 521.1400, 460.9614)#
datatl <- c(512.4489, 619.2768, 630.0317, 511.0159, 433.6401, 388.8034)#
#
modeldatameans <- rbind(means,datameans)#
modeldatatu <- rbind(tu,datatu)#
modeldatatl <- rbind(tl,datatl)#
#
 barplot(modeldatameans,#
          beside=TRUE, #
          ylim=range(0,800),#
#          col=cols,#
         main="Total reading time at polarity item: model versus data",#
#         axisnames=FALSE,#
         names.arg=letters[1:6],#
         xlab=c("Conditions"),#
         cex.names=1.2,cex.lab=1.2)#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   #for(row in c(1:2)){ # for model then for data#
   for(row in c(2:2)){ # for model then for data#
      arrows(#
          #initialx0,#
          initialx0+1,#
          modeldatatu[row,col],#
          #initialx0,#
          initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   #initialx0 <- initialx0+1#
   initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
#
#
 legend(18,750,#
               legend=c("model data", "human data"),#
               fill=c(1,0),#
               xjust=1)
F=0.26#
noise=0.30#
MD=-0.6#
MP=1#
CC="off"#
runs=500#
#
values <- data.frame(F,noise,MD,MP,CC,runs,rbind(means),row.names=NULL)#
write.table(values,"v6pred.data",sep="\t",row.names=FALSE,append=TRUE,col.names=FALSE)#
#v6pred <- exp1
a <- read.table("a.completed")#
b <- read.table("b.completed")#
c <- read.table("c.completed")#
d <- read.table("d.completed")#
e <- read.table("e.completed")#
f <- read.table("f.completed")#
#
#
colnames(a) <- c("trial","word","position","condition","RT")#
colnames(b) <- c("trial","word","position","condition","RT")#
colnames(c) <- c("trial","word","position","condition","RT")#
colnames(d) <- c("trial","word","position","condition","RT")#
colnames(e) <- c("trial","word","position","condition","RT")#
colnames(f) <- c("trial","word","position","condition","RT")#
#
data <- rbind(a,b,c,d,e,f)#
#
dim(a)#
#
####################################################
### chunk number 2: #
####################################################
#
pos9data <- subset(data,position==9)#
#
data.abc <- rbind(a,b,c)#
#
data$trial <- as.factor(data$trial)#
#
means <- with(pos9data, tapply(RT,IND=list(condition),mean))#
stderr <- with(pos9data,tapply(RT,IND=list(condition),se))#
tn <- with(pos9data,tapply(RT,IND=list(condition),length))#
tu <- with(pos9data,means + qt(.975,df=tn-1) * stderr)#
tl <- with(pos9data,means - qt(.975,df=tn-1) * stderr)#
#
#
####################################################
### chunk number 3: #
####################################################
#
means <- means*1000#
tu <- tu*1000#
tl <- tl*1000#
#
#hack for now#
#tu[3] <- tu[2]#
#tl[3] <- tl[2]#
#means[3] <- means[2]#
#
#
#
####################################################
### chunk number 4: #
####################################################
#
cols <-  gray(0:5 / 5)#
#
# barplot(t(means),#
#          beside=TRUE, #
#          ylim=range(0,600),#
#          col=cols,#
#         main="Total reading time model",#
#         axisnames=FALSE,#
##         names.arg=paste(c("pos"),rep(1:10,1),sep=""),#
#         cex.names=1.2,cex.lab=1.2)#
##
##
#initialx0 <- 1.5#
## for(col in c(1:6)){#
#   for(row in c(1:6)){#
#      arrows(initialx0,#
#          t(tu)[row],#
#          initialx0,#
#          t(tl)[row],#
#          angle=90,#
#          length=.025,#
#          code=3)#
#   initialx0 <- initialx0+2#
# }#end-for#
#   initialx0 <- initialx0+1#
#}#end-for#
#
#
#
####################################################
### chunk number 5: #
####################################################
datameans <- c(564.4274, 701.4310, 705.9175, 571.8799, 477.3900, 424.8824)#
datatu <- c(616.4060, 783.5852, 781.8033, 632.7439, 521.1400, 460.9614)#
datatl <- c(512.4489, 619.2768, 630.0317, 511.0159, 433.6401, 388.8034)#
#
modeldatameans <- rbind(means,datameans)#
modeldatatu <- rbind(tu,datatu)#
modeldatatl <- rbind(tl,datatl)#
#
 barplot(modeldatameans,#
          beside=TRUE, #
          ylim=range(0,800),#
#          col=cols,#
         main="Total reading time at polarity item: model versus data",#
#         axisnames=FALSE,#
         names.arg=letters[1:6],#
         xlab=c("Conditions"),#
         cex.names=1.2,cex.lab=1.2)#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   #for(row in c(1:2)){ # for model then for data#
   for(row in c(2:2)){ # for model then for data#
      arrows(#
          #initialx0,#
          initialx0+1,#
          modeldatatu[row,col],#
          #initialx0,#
          initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   #initialx0 <- initialx0+1#
   initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
#
#
 legend(18,750,#
               legend=c("model data", "human data"),#
               fill=c(1,0),#
               xjust=1)
dim(d)
dim(b)
dim(c)
dim(a)
dim(e)
dim(f)
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   for(row in c(1:2)){ # for model then for data#
   #for(row in c(2:2)){ # for model then for data#
      arrows(#
          initialx0,#
          #initialx0+1,#
          modeldatatu[row,col],#
          initialx0,#
          #initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   initialx0 <- initialx0+1#
   #initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for
F=0.26#
noise=0.45#
MD=-0.6#
MP=1#
CC="on"#
runs=800#
#
values <- data.frame(F,noise,MD,MP,CC,runs,rbind(means),row.names=NULL)#
write.table(values,"v6pred.data",sep="\t",row.names=FALSE,append=TRUE,col.names=FALSE)#
#v6pred <- exp1
a <- read.table("a.completed")#
b <- read.table("b.completed")#
c <- read.table("c.completed")#
d <- read.table("d.completed")#
e <- read.table("e.completed")#
f <- read.table("f.completed")#
#
#
colnames(a) <- c("trial","word","position","condition","RT")#
colnames(b) <- c("trial","word","position","condition","RT")#
colnames(c) <- c("trial","word","position","condition","RT")#
colnames(d) <- c("trial","word","position","condition","RT")#
colnames(e) <- c("trial","word","position","condition","RT")#
colnames(f) <- c("trial","word","position","condition","RT")
####################################################
### chunk number 1: #
####################################################
#
#a <- read.table("a.txt")#
#b <- read.table("b.txt")#
#c <- read.table("c.txt")#
#d <- read.table("d.txt")#
#e <- read.table("e.txt")#
#f <- read.table("f.txt")#
a <- read.table("a.completed")#
b <- read.table("b.completed")#
c <- read.table("c.completed")#
d <- read.table("d.completed")#
e <- read.table("e.completed")#
f <- read.table("f.completed")#
#
#
colnames(a) <- c("trial","word","position","condition","RT")#
colnames(b) <- c("trial","word","position","condition","RT")#
colnames(c) <- c("trial","word","position","condition","RT")#
colnames(d) <- c("trial","word","position","condition","RT")#
colnames(e) <- c("trial","word","position","condition","RT")#
colnames(f) <- c("trial","word","position","condition","RT")#
#
data <- rbind(a,b,c,d,e,f)#
#
dim(a)#
dim(b)#
dim(c)#
dim(d)#
dim(e)#
dim(f)#
#
####################################################
### chunk number 2: #
####################################################
#
pos9data <- subset(data,position==9)#
#
data.abc <- rbind(a,b,c)#
#
data$trial <- as.factor(data$trial)#
#
means <- with(pos9data, tapply(RT,IND=list(condition),mean))#
stderr <- with(pos9data,tapply(RT,IND=list(condition),se))#
tn <- with(pos9data,tapply(RT,IND=list(condition),length))#
tu <- with(pos9data,means + qt(.975,df=tn-1) * stderr)#
tl <- with(pos9data,means - qt(.975,df=tn-1) * stderr)#
#
#
####################################################
### chunk number 3: #
####################################################
#
means <- means*1000#
tu <- tu*1000#
tl <- tl*1000#
#
#hack for now#
#tu[3] <- tu[2]#
#tl[3] <- tl[2]#
#means[3] <- means[2]#
#
#
#
####################################################
### chunk number 4: #
####################################################
#
cols <-  gray(0:5 / 5)#
#
# barplot(t(means),#
#          beside=TRUE, #
#          ylim=range(0,600),#
#          col=cols,#
#         main="Total reading time model",#
#         axisnames=FALSE,#
##         names.arg=paste(c("pos"),rep(1:10,1),sep=""),#
#         cex.names=1.2,cex.lab=1.2)#
##
##
#initialx0 <- 1.5#
## for(col in c(1:6)){#
#   for(row in c(1:6)){#
#      arrows(initialx0,#
#          t(tu)[row],#
#          initialx0,#
#          t(tl)[row],#
#          angle=90,#
#          length=.025,#
#          code=3)#
#   initialx0 <- initialx0+2#
# }#end-for#
#   initialx0 <- initialx0+1#
#}#end-for#
#
#
#
####################################################
### chunk number 5: #
####################################################
datameans <- c(564.4274, 701.4310, 705.9175, 571.8799, 477.3900, 424.8824)#
datatu <- c(616.4060, 783.5852, 781.8033, 632.7439, 521.1400, 460.9614)#
datatl <- c(512.4489, 619.2768, 630.0317, 511.0159, 433.6401, 388.8034)#
#
modeldatameans <- rbind(means,datameans)#
modeldatatu <- rbind(tu,datatu)#
modeldatatl <- rbind(tl,datatl)#
#
 barplot(modeldatameans,#
          beside=TRUE, #
          ylim=range(0,800),#
#          col=cols,#
         main="Total reading time at polarity item: model versus data",#
#         axisnames=FALSE,#
         names.arg=letters[1:6],#
         xlab=c("Conditions"),#
         cex.names=1.2,cex.lab=1.2)#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   #for(row in c(1:2)){ # for model then for data#
   for(row in c(2:2)){ # for model then for data#
      arrows(#
          #initialx0,#
          initialx0+1,#
          modeldatatu[row,col],#
          #initialx0,#
          initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   #initialx0 <- initialx0+1#
   initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   for(row in c(1:2)){ # for model then for data#
   #for(row in c(2:2)){ # for model then for data#
      arrows(#
          initialx0,#
          #initialx0+1,#
          modeldatatu[row,col],#
          initialx0,#
          #initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   initialx0 <- initialx0+1#
   #initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
#
#
 legend(18,750,#
               legend=c("model data", "human data"),#
               fill=c(1,0),#
               xjust=1)
F=0.26#
noise=0.35#
MD=-0.6#
MP=1#
CC="on"#
runs=800#
emma="off"
values <- data.frame(F,noise,MD,MP,CC,runs,rbind(means),row.names=NULL)#
write.table(values,"../v6pred.data",sep="\t",row.names=FALSE,append=TRUE,col.names=FALSE)#
#v6pred <- exp1
#
 barplot(modeldatameans,#
          beside=TRUE, #
          ylim=range(0,800),#
#          col=cols,#
         main="TRT at PI: lf .26, noise .35, 800 runs",#
#         axisnames=FALSE,#
         names.arg=letters[1:6],#
         xlab=c("Conditions"),#
         cex.names=1.2,cex.lab=1.2)#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   #for(row in c(1:2)){ # for model then for data#
   for(row in c(2:2)){ # for model then for data#
      arrows(#
          #initialx0,#
          initialx0+1,#
          modeldatatu[row,col],#
          #initialx0,#
          initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   #initialx0 <- initialx0+1#
   initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   for(row in c(1:2)){ # for model then for data#
   #for(row in c(2:2)){ # for model then for data#
      arrows(#
          initialx0,#
          #initialx0+1,#
          modeldatatu[row,col],#
          initialx0,#
          #initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   initialx0 <- initialx0+1#
   #initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
#
#
 legend(18,750,#
               legend=c("model data", "human data"),#
               fill=c(1,0),#
               xjust=1)
####################################################
### chunk number 1: #
####################################################
#
#a <- read.table("a.txt")#
#b <- read.table("b.txt")#
#c <- read.table("c.txt")#
#d <- read.table("d.txt")#
#e <- read.table("e.txt")#
#f <- read.table("f.txt")#
a <- read.table("a.completed")#
b <- read.table("b.completed")#
c <- read.table("c.completed")#
d <- read.table("d.completed")#
e <- read.table("e.completed")#
f <- read.table("f.completed")#
#
#
colnames(a) <- c("trial","word","position","condition","RT")#
colnames(b) <- c("trial","word","position","condition","RT")#
colnames(c) <- c("trial","word","position","condition","RT")#
colnames(d) <- c("trial","word","position","condition","RT")#
colnames(e) <- c("trial","word","position","condition","RT")#
colnames(f) <- c("trial","word","position","condition","RT")#
#
data <- rbind(a,b,c,d,e,f)#
#
dim(a)#
dim(b)#
dim(c)#
dim(d)#
dim(e)#
dim(f)#
#
####################################################
### chunk number 2: #
####################################################
#
pos9data <- subset(data,position==9)#
#
data.abc <- rbind(a,b,c)#
#
data$trial <- as.factor(data$trial)#
#
means <- with(pos9data, tapply(RT,IND=list(condition),mean))#
stderr <- with(pos9data,tapply(RT,IND=list(condition),se))#
tn <- with(pos9data,tapply(RT,IND=list(condition),length))#
tu <- with(pos9data,means + qt(.975,df=tn-1) * stderr)#
tl <- with(pos9data,means - qt(.975,df=tn-1) * stderr)#
#
#
####################################################
### chunk number 3: #
####################################################
#
means <- means*1000#
tu <- tu*1000#
tl <- tl*1000#
#
#hack for now#
#tu[3] <- tu[2]#
#tl[3] <- tl[2]#
#means[3] <- means[2]#
#
#
#
####################################################
### chunk number 4: #
####################################################
#
cols <-  gray(0:5 / 5)#
#
# barplot(t(means),#
#          beside=TRUE, #
#          ylim=range(0,600),#
#          col=cols,#
#         main="Total reading time model",#
#         axisnames=FALSE,#
##         names.arg=paste(c("pos"),rep(1:10,1),sep=""),#
#         cex.names=1.2,cex.lab=1.2)#
##
##
#initialx0 <- 1.5#
## for(col in c(1:6)){#
#   for(row in c(1:6)){#
#      arrows(initialx0,#
#          t(tu)[row],#
#          initialx0,#
#          t(tl)[row],#
#          angle=90,#
#          length=.025,#
#          code=3)#
#   initialx0 <- initialx0+2#
# }#end-for#
#   initialx0 <- initialx0+1#
#}#end-for#
#
#
#
####################################################
### chunk number 5: #
####################################################
datameans <- c(564.4274, 701.4310, 705.9175, 571.8799, 477.3900, 424.8824)#
datatu <- c(616.4060, 783.5852, 781.8033, 632.7439, 521.1400, 460.9614)#
datatl <- c(512.4489, 619.2768, 630.0317, 511.0159, 433.6401, 388.8034)#
#
modeldatameans <- rbind(means,datameans)#
modeldatatu <- rbind(tu,datatu)#
modeldatatl <- rbind(tl,datatl)#
#
 barplot(modeldatameans,#
          beside=TRUE, #
          ylim=range(0,800),#
#          col=cols,#
         main="TRT at PI: lf .26, noise .30, 800 runs",#
#         axisnames=FALSE,#
         names.arg=letters[1:6],#
         xlab=c("Conditions"),#
         cex.names=1.2,cex.lab=1.2)#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   #for(row in c(1:2)){ # for model then for data#
   for(row in c(2:2)){ # for model then for data#
      arrows(#
          #initialx0,#
          initialx0+1,#
          modeldatatu[row,col],#
          #initialx0,#
          initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   #initialx0 <- initialx0+1#
   initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   for(row in c(1:2)){ # for model then for data#
   #for(row in c(2:2)){ # for model then for data#
      arrows(#
          initialx0,#
          #initialx0+1,#
          modeldatatu[row,col],#
          initialx0,#
          #initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   initialx0 <- initialx0+1#
   #initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
#
#
 legend(18,750,#
               legend=c("model data", "human data"),#
               fill=c(1,0),#
               xjust=1)
F=0.26#
noise=0.30#
MD=-0.6#
MP=1#
CC="on"#
runs=800#
emma="off"#
#
values <- data.frame(F,noise,MD,MP,CC,runs,rbind(means),row.names=NULL)#
write.table(values,"../v6pred.data",sep="\t",row.names=FALSE,append=TRUE,col.names=FALSE)#
#v6pred <- exp1
####################################################
### chunk number 1: #
####################################################
#
#a <- read.table("a.txt")#
#b <- read.table("b.txt")#
#c <- read.table("c.txt")#
#d <- read.table("d.txt")#
#e <- read.table("e.txt")#
#f <- read.table("f.txt")#
a <- read.table("a.completed")#
b <- read.table("b.completed")#
c <- read.table("c.completed")#
d <- read.table("d.completed")#
e <- read.table("e.completed")#
f <- read.table("f.completed")#
#
#
colnames(a) <- c("trial","word","position","condition","RT")#
colnames(b) <- c("trial","word","position","condition","RT")#
colnames(c) <- c("trial","word","position","condition","RT")#
colnames(d) <- c("trial","word","position","condition","RT")#
colnames(e) <- c("trial","word","position","condition","RT")#
colnames(f) <- c("trial","word","position","condition","RT")#
#
data <- rbind(a,b,c,d,e,f)#
#
dim(a)#
dim(b)#
dim(c)#
dim(d)#
dim(e)#
dim(f)#
#
####################################################
### chunk number 2: #
####################################################
#
pos9data <- subset(data,position==9)#
#
data.abc <- rbind(a,b,c)#
#
data$trial <- as.factor(data$trial)#
#
means <- with(pos9data, tapply(RT,IND=list(condition),mean))#
stderr <- with(pos9data,tapply(RT,IND=list(condition),se))#
tn <- with(pos9data,tapply(RT,IND=list(condition),length))#
tu <- with(pos9data,means + qt(.975,df=tn-1) * stderr)#
tl <- with(pos9data,means - qt(.975,df=tn-1) * stderr)#
#
#
####################################################
### chunk number 3: #
####################################################
#
means <- means*1000#
tu <- tu*1000#
tl <- tl*1000#
#
#hack for now#
#tu[3] <- tu[2]#
#tl[3] <- tl[2]#
#means[3] <- means[2]#
#
#
#
####################################################
### chunk number 4: #
####################################################
#
cols <-  gray(0:5 / 5)#
#
# barplot(t(means),#
#          beside=TRUE, #
#          ylim=range(0,600),#
#          col=cols,#
#         main="Total reading time model",#
#         axisnames=FALSE,#
##         names.arg=paste(c("pos"),rep(1:10,1),sep=""),#
#         cex.names=1.2,cex.lab=1.2)#
##
##
#initialx0 <- 1.5#
## for(col in c(1:6)){#
#   for(row in c(1:6)){#
#      arrows(initialx0,#
#          t(tu)[row],#
#          initialx0,#
#          t(tl)[row],#
#          angle=90,#
#          length=.025,#
#          code=3)#
#   initialx0 <- initialx0+2#
# }#end-for#
#   initialx0 <- initialx0+1#
#}#end-for#
#
#
#
####################################################
### chunk number 5: #
####################################################
datameans <- c(564.4274, 701.4310, 705.9175, 571.8799, 477.3900, 424.8824)#
datatu <- c(616.4060, 783.5852, 781.8033, 632.7439, 521.1400, 460.9614)#
datatl <- c(512.4489, 619.2768, 630.0317, 511.0159, 433.6401, 388.8034)#
#
modeldatameans <- rbind(means,datameans)#
modeldatatu <- rbind(tu,datatu)#
modeldatatl <- rbind(tl,datatl)#
#
 barplot(modeldatameans,#
          beside=TRUE, #
          ylim=range(0,800),#
#          col=cols,#
         main="TRT at PI: lf .26, noise .25, 800 runs",#
#         axisnames=FALSE,#
         names.arg=letters[1:6],#
         xlab=c("Conditions"),#
         cex.names=1.2,cex.lab=1.2)#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   #for(row in c(1:2)){ # for model then for data#
   for(row in c(2:2)){ # for model then for data#
      arrows(#
          #initialx0,#
          initialx0+1,#
          modeldatatu[row,col],#
          #initialx0,#
          initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   #initialx0 <- initialx0+1#
   initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   for(row in c(1:2)){ # for model then for data#
   #for(row in c(2:2)){ # for model then for data#
      arrows(#
          initialx0,#
          #initialx0+1,#
          modeldatatu[row,col],#
          initialx0,#
          #initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   initialx0 <- initialx0+1#
   #initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
#
#
 legend(18,750,#
               legend=c("model data", "human data"),#
               fill=c(1,0),#
               xjust=1)
F=0.26#
noise=0.25#
MD=-0.6#
MP=1#
CC="on"#
runs=800#
emma="off"#
#
values <- data.frame(F,noise,MD,MP,CC,runs,rbind(means),row.names=NULL)#
write.table(values,"../v6pred.data",sep="\t",row.names=FALSE,append=TRUE,col.names=FALSE)#
#v6pred <- exp1
####################################################
### chunk number 1: #
####################################################
#
#a <- read.table("a.txt")#
#b <- read.table("b.txt")#
#c <- read.table("c.txt")#
#d <- read.table("d.txt")#
#e <- read.table("e.txt")#
#f <- read.table("f.txt")#
a <- read.table("a.completed")#
b <- read.table("b.completed")#
c <- read.table("c.completed")#
d <- read.table("d.completed")#
e <- read.table("e.completed")#
f <- read.table("f.completed")#
#
#
colnames(a) <- c("trial","word","position","condition","RT")#
colnames(b) <- c("trial","word","position","condition","RT")#
colnames(c) <- c("trial","word","position","condition","RT")#
colnames(d) <- c("trial","word","position","condition","RT")#
colnames(e) <- c("trial","word","position","condition","RT")#
colnames(f) <- c("trial","word","position","condition","RT")#
#
data <- rbind(a,b,c,d,e,f)#
#
dim(a)#
dim(b)#
dim(c)#
dim(d)#
dim(e)#
dim(f)#
#
####################################################
### chunk number 2: #
####################################################
#
pos9data <- subset(data,position==9)#
#
data.abc <- rbind(a,b,c)#
#
data$trial <- as.factor(data$trial)#
#
means <- with(pos9data, tapply(RT,IND=list(condition),mean))#
stderr <- with(pos9data,tapply(RT,IND=list(condition),se))#
tn <- with(pos9data,tapply(RT,IND=list(condition),length))#
tu <- with(pos9data,means + qt(.975,df=tn-1) * stderr)#
tl <- with(pos9data,means - qt(.975,df=tn-1) * stderr)#
#
#
####################################################
### chunk number 3: #
####################################################
#
means <- means*1000#
tu <- tu*1000#
tl <- tl*1000#
#
#hack for now#
#tu[3] <- tu[2]#
#tl[3] <- tl[2]#
#means[3] <- means[2]#
#
#
#
####################################################
### chunk number 4: #
####################################################
#
cols <-  gray(0:5 / 5)#
#
# barplot(t(means),#
#          beside=TRUE, #
#          ylim=range(0,600),#
#          col=cols,#
#         main="Total reading time model",#
#         axisnames=FALSE,#
##         names.arg=paste(c("pos"),rep(1:10,1),sep=""),#
#         cex.names=1.2,cex.lab=1.2)#
##
##
#initialx0 <- 1.5#
## for(col in c(1:6)){#
#   for(row in c(1:6)){#
#      arrows(initialx0,#
#          t(tu)[row],#
#          initialx0,#
#          t(tl)[row],#
#          angle=90,#
#          length=.025,#
#          code=3)#
#   initialx0 <- initialx0+2#
# }#end-for#
#   initialx0 <- initialx0+1#
#}#end-for#
#
#
#
####################################################
### chunk number 5: #
####################################################
datameans <- c(564.4274, 701.4310, 705.9175, 571.8799, 477.3900, 424.8824)#
datatu <- c(616.4060, 783.5852, 781.8033, 632.7439, 521.1400, 460.9614)#
datatl <- c(512.4489, 619.2768, 630.0317, 511.0159, 433.6401, 388.8034)#
#
modeldatameans <- rbind(means,datameans)#
modeldatatu <- rbind(tu,datatu)#
modeldatatl <- rbind(tl,datatl)#
#
 barplot(modeldatameans,#
          beside=TRUE, #
          ylim=range(0,800),#
#          col=cols,#
         main="TRT at PI: lf .26, noise .15, 800 runs",#
#         axisnames=FALSE,#
         names.arg=letters[1:6],#
         xlab=c("Conditions"),#
         cex.names=1.2,cex.lab=1.2)#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   #for(row in c(1:2)){ # for model then for data#
   for(row in c(2:2)){ # for model then for data#
      arrows(#
          #initialx0,#
          initialx0+1,#
          modeldatatu[row,col],#
          #initialx0,#
          initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   #initialx0 <- initialx0+1#
   initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   for(row in c(1:2)){ # for model then for data#
   #for(row in c(2:2)){ # for model then for data#
      arrows(#
          initialx0,#
          #initialx0+1,#
          modeldatatu[row,col],#
          initialx0,#
          #initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   initialx0 <- initialx0+1#
   #initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
#
#
 legend(18,750,#
               legend=c("model data", "human data"),#
               fill=c(1,0),#
               xjust=1)
F=0.26#
noise=0.15#
MD=-0.6#
MP=1#
CC="on"#
runs=800#
emma="off"#
#
values <- data.frame(F,noise,MD,MP,CC,runs,rbind(means),row.names=NULL)#
write.table(values,"../v6pred.data",sep="\t",row.names=FALSE,append=TRUE,col.names=FALSE)#
#v6pred <- exp1
####################################################
### chunk number 1: #
####################################################
#
#a <- read.table("a.txt")#
#b <- read.table("b.txt")#
#c <- read.table("c.txt")#
#d <- read.table("d.txt")#
#e <- read.table("e.txt")#
#f <- read.table("f.txt")#
a <- read.table("a.completed")#
b <- read.table("b.completed")#
c <- read.table("c.completed")#
d <- read.table("d.completed")#
e <- read.table("e.completed")#
f <- read.table("f.completed")#
#
#
colnames(a) <- c("trial","word","position","condition","RT")#
colnames(b) <- c("trial","word","position","condition","RT")#
colnames(c) <- c("trial","word","position","condition","RT")#
colnames(d) <- c("trial","word","position","condition","RT")#
colnames(e) <- c("trial","word","position","condition","RT")#
colnames(f) <- c("trial","word","position","condition","RT")#
#
data <- rbind(a,b,c,d,e,f)#
#
dim(a)#
dim(b)#
dim(c)#
dim(d)#
dim(e)#
dim(f)#
#
####################################################
### chunk number 2: #
####################################################
#
pos9data <- subset(data,position==9)#
#
data.abc <- rbind(a,b,c)#
#
data$trial <- as.factor(data$trial)#
#
means <- with(pos9data, tapply(RT,IND=list(condition),mean))#
stderr <- with(pos9data,tapply(RT,IND=list(condition),se))#
tn <- with(pos9data,tapply(RT,IND=list(condition),length))#
tu <- with(pos9data,means + qt(.975,df=tn-1) * stderr)#
tl <- with(pos9data,means - qt(.975,df=tn-1) * stderr)#
#
#
####################################################
### chunk number 3: #
####################################################
#
means <- means*1000#
tu <- tu*1000#
tl <- tl*1000#
#
#hack for now#
#tu[3] <- tu[2]#
#tl[3] <- tl[2]#
#means[3] <- means[2]#
#
#
#
####################################################
### chunk number 4: #
####################################################
#
cols <-  gray(0:5 / 5)#
#
# barplot(t(means),#
#          beside=TRUE, #
#          ylim=range(0,600),#
#          col=cols,#
#         main="Total reading time model",#
#         axisnames=FALSE,#
##         names.arg=paste(c("pos"),rep(1:10,1),sep=""),#
#         cex.names=1.2,cex.lab=1.2)#
##
##
#initialx0 <- 1.5#
## for(col in c(1:6)){#
#   for(row in c(1:6)){#
#      arrows(initialx0,#
#          t(tu)[row],#
#          initialx0,#
#          t(tl)[row],#
#          angle=90,#
#          length=.025,#
#          code=3)#
#   initialx0 <- initialx0+2#
# }#end-for#
#   initialx0 <- initialx0+1#
#}#end-for#
#
#
#
####################################################
### chunk number 5: #
####################################################
datameans <- c(564.4274, 701.4310, 705.9175, 571.8799, 477.3900, 424.8824)#
datatu <- c(616.4060, 783.5852, 781.8033, 632.7439, 521.1400, 460.9614)#
datatl <- c(512.4489, 619.2768, 630.0317, 511.0159, 433.6401, 388.8034)#
#
modeldatameans <- rbind(means,datameans)#
modeldatatu <- rbind(tu,datatu)#
modeldatatl <- rbind(tl,datatl)#
#
 barplot(modeldatameans,#
          beside=TRUE, #
          ylim=range(0,800),#
#          col=cols,#
         main="TRT at PI: lf .26, noise .45, 800 runs",#
#         axisnames=FALSE,#
         names.arg=letters[1:6],#
         xlab=c("Conditions"),#
         cex.names=1.2,cex.lab=1.2)#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   #for(row in c(1:2)){ # for model then for data#
   for(row in c(2:2)){ # for model then for data#
      arrows(#
          #initialx0,#
          initialx0+1,#
          modeldatatu[row,col],#
          #initialx0,#
          initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   #initialx0 <- initialx0+1#
   initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   for(row in c(1:2)){ # for model then for data#
   #for(row in c(2:2)){ # for model then for data#
      arrows(#
          initialx0,#
          #initialx0+1,#
          modeldatatu[row,col],#
          initialx0,#
          #initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   initialx0 <- initialx0+1#
   #initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
#
#
 legend(18,750,#
               legend=c("model data", "human data"),#
               fill=c(1,0),#
               xjust=1)
F=0.26#
noise=0.45#
MD=-0.6#
MP=1#
CC="on"#
runs=800#
emma="off"#
#
values <- data.frame(F,noise,MD,MP,CC,runs,rbind(means),row.names=NULL)#
write.table(values,"../v6pred.data",sep="\t",row.names=FALSE,append=TRUE,col.names=FALSE)#
#v6pred <- exp1
mytable <- read.table("../v6pred.data",header=T)
mytable <- read.table("../v6pred.data",header=T,sep="\t")
mytable <- read.table("../v6pred.data",header=T)
mytable
t <- read.table("../v6pred.data",header=T)
t2 <- subset(t,emma=="off")
t2
t2 <- subset(t,emma=="off" && runs==800)
t2
t2 <- subset(t,emma=="off" & runs==800)
t2
help(order)
t2[order(noise)]
t2[order(noise) , ]
t2
attach(t2)
t2[order(noise)]
t2[order(noise) , ]
t2 <- subset(t,emma=="off" & runs==800)[order(noise), ]
t2
t2[c(1,2,7:12),]
t2[,c(1,2,7:12)]
mytable <- t2[,c(1,2,7:12)]
mytable
write.table(mytable,"../noisecomp.data",rownames=F,sep="\t")
write.table(mytable,"../noisecomp.data",row.names=F,sep="\t")
mytable
write.table(mytable,"../noisecomp.data",row.names=FALSE,sep="\t")
d <- read.table("/Users/felix/Dropbox/Workspace/ACT-R_EMMA/PortedParser3/noisecomp.data")
summary(d)
d <- read.table("/Users/felix/Dropbox/Workspace/ACT-R_EMMA/PortedParser3/noisecomp.data", header=T)
summary(d)
d
a <- read.table("a.completed")#
b <- read.table("b.completed")#
c <- read.table("c.completed")#
d <- read.table("d.completed")#
e <- read.table("e.completed")#
f <- read.table("f.completed")#
#
#
colnames(a) <- c("trial","word","position","condition","RT")#
colnames(b) <- c("trial","word","position","condition","RT")#
colnames(c) <- c("trial","word","position","condition","RT")#
colnames(d) <- c("trial","word","position","condition","RT")#
colnames(e) <- c("trial","word","position","condition","RT")#
colnames(f) <- c("trial","word","position","condition","RT")
#
data <- rbind(a,b,c,d,e,f)#
#
dim(a)#
dim(b)#
dim(c)#
dim(d)#
dim(e)#
dim(f)#
#
####################################################
### chunk number 2: #
####################################################
#
pos9data <- subset(data,position==9)#
#
data.abc <- rbind(a,b,c)#
#
data$trial <- as.factor(data$trial)#
#
means <- with(pos9data, tapply(RT,IND=list(condition),mean))#
stderr <- with(pos9data,tapply(RT,IND=list(condition),se))#
tn <- with(pos9data,tapply(RT,IND=list(condition),length))#
tu <- with(pos9data,means + qt(.975,df=tn-1) * stderr)#
tl <- with(pos9data,means - qt(.975,df=tn-1) * stderr)#
#
#
####################################################
### chunk number 3: #
####################################################
#
means <- means*1000#
tu <- tu*1000#
tl <- tl*1000#
#
#hack for now#
#tu[3] <- tu[2]#
#tl[3] <- tl[2]#
#means[3] <- means[2]#
#
#
#
####################################################
### chunk number 4: #
####################################################
#
cols <-  gray(0:5 / 5)#
#
# barplot(t(means),#
#          beside=TRUE, #
#          ylim=range(0,600),#
#          col=cols,#
#         main="Total reading time model",#
#         axisnames=FALSE,#
##         names.arg=paste(c("pos"),rep(1:10,1),sep=""),#
#         cex.names=1.2,cex.lab=1.2)#
##
##
#initialx0 <- 1.5#
## for(col in c(1:6)){#
#   for(row in c(1:6)){#
#      arrows(initialx0,#
#          t(tu)[row],#
#          initialx0,#
#          t(tl)[row],#
#          angle=90,#
#          length=.025,#
#          code=3)#
#   initialx0 <- initialx0+2#
# }#end-for#
#   initialx0 <- initialx0+1#
#}#end-for
#
####################################################
### chunk number 5: #
####################################################
datameans <- c(564.4274, 701.4310, 705.9175, 571.8799, 477.3900, 424.8824)#
datatu <- c(616.4060, 783.5852, 781.8033, 632.7439, 521.1400, 460.9614)#
datatl <- c(512.4489, 619.2768, 630.0317, 511.0159, 433.6401, 388.8034)#
#
modeldatameans <- rbind(means,datameans)#
modeldatatu <- rbind(tu,datatu)#
modeldatatl <- rbind(tl,datatl)#
#
 barplot(modeldatameans,#
          beside=TRUE, #
          ylim=range(0,800),#
#          col=cols,#
         main="TRT at PI: lf .26, noise .10, 800 runs",#
#         axisnames=FALSE,#
         names.arg=letters[1:6],#
         xlab=c("Conditions"),#
         cex.names=1.2,cex.lab=1.2)#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   #for(row in c(1:2)){ # for model then for data#
   for(row in c(2:2)){ # for model then for data#
      arrows(#
          #initialx0,#
          initialx0+1,#
          modeldatatu[row,col],#
          #initialx0,#
          initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   #initialx0 <- initialx0+1#
   initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   for(row in c(1:2)){ # for model then for data#
   #for(row in c(2:2)){ # for model then for data#
      arrows(#
          initialx0,#
          #initialx0+1,#
          modeldatatu[row,col],#
          initialx0,#
          #initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   initialx0 <- initialx0+1#
   #initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
#
#
 legend(18,750,#
               legend=c("model data", "human data"),#
               fill=c(1,0),#
               xjust=1)
#
############
F=0.26#
noise=0.10#
MD=-0.6#
MP=1#
CC="on"#
runs=800#
emma="off"#
#
values <- data.frame(F,noise,MD,MP,CC,runs,rbind(means),emma,row.names=NULL)#
write.table(values,"../v6pred.data",sep="\t",row.names=FALSE,append=TRUE,col.names=FALSE)#
#v6pred <- exp1
#
t <- read.table("../v6pred.data",header=T)#
t2 <- subset(t,emma=="off" & runs==800)[order(noise), ]
mytable <- t2[,c(1,2,7:12)]
mytable
t
t2
t2 <- subset(t,emma=="off" & runs==800)[order(noise), ]
t2
t
t2 <- subset(t,emma=="off" & runs==800)
t2
subset(t,emma=="off" & runs==800)[order(noise), ]
t$noise
t$noise <- as.integer(t$noise)
t$noise
t <- read.table("../v6pred.data",header=T)
t$noise <- as.numeric(t$noise)
t$noise
t2 <- subset(t,emma=="off" & runs==800)[order(noise), ]
t2
t <- read.table("../v6pred.data",header=T)
t
t2 <- subset(t,emma=="off" & runs==800)[order(noise), ]
t2
subset(t,emma=="off" & runs==800)
nd <- read.table("../noisecomp.data",header=T)
nd
compl.a <- c(616,403,129,63,33,17)#
succ.att.a <- c(759,617,248,133,91,47)#
corr.att.a <- c(759,617,236,126,79,43)#
mean.att.a <- c(0.00395257, 0.00972447,0.0241935,0.037594,0.0549451,0)
nd$compl.a <- compl.a#
nd$succ.att.a <- succ.att.a#
nd$corr.att.a <- corr.att.a#
nd$mean.att.jemals.a <- mean.att.a
nd
write.table(nd,"../noisecomp.data",row.names=FALSE,sep="\t")
#
#a <- read.table("a.txt")#
#b <- read.table("b.txt")#
#c <- read.table("c.txt")#
#d <- read.table("d.txt")#
#e <- read.table("e.txt")#
#f <- read.table("f.txt")#
a <- read.table("a.completed")#
b <- read.table("b.completed")#
c <- read.table("c.completed")#
d <- read.table("d.completed")#
e <- read.table("e.completed")#
f <- read.table("f.completed")#
#
#
colnames(a) <- c("trial","word","position","condition","RT")#
colnames(b) <- c("trial","word","position","condition","RT")#
colnames(c) <- c("trial","word","position","condition","RT")#
colnames(d) <- c("trial","word","position","condition","RT")#
colnames(e) <- c("trial","word","position","condition","RT")#
colnames(f) <- c("trial","word","position","condition","RT")#
#
data <- rbind(a,b,c,d,e,f)#
#
dim(a)#
dim(b)#
dim(c)#
dim(d)#
dim(e)#
dim(f)#
#
####################################################
### chunk number 2: #
####################################################
#
pos9data <- subset(data,position==9)#
#
data.abc <- rbind(a,b,c)#
#
data$trial <- as.factor(data$trial)#
#
means <- with(pos9data, tapply(RT,IND=list(condition),mean))#
stderr <- with(pos9data,tapply(RT,IND=list(condition),se))#
tn <- with(pos9data,tapply(RT,IND=list(condition),length))#
tu <- with(pos9data,means + qt(.975,df=tn-1) * stderr)#
tl <- with(pos9data,means - qt(.975,df=tn-1) * stderr)#
#
#
####################################################
### chunk number 3: #
####################################################
#
means <- means*1000#
tu <- tu*1000#
tl <- tl*1000#
#
#hack for now#
#tu[3] <- tu[2]#
#tl[3] <- tl[2]#
#means[3] <- means[2]#
#
#
#
####################################################
### chunk number 4: #
####################################################
#
cols <-  gray(0:5 / 5)#
#
# barplot(t(means),#
#          beside=TRUE, #
#          ylim=range(0,600),#
#          col=cols,#
#         main="Total reading time model",#
#         axisnames=FALSE,#
##         names.arg=paste(c("pos"),rep(1:10,1),sep=""),#
#         cex.names=1.2,cex.lab=1.2)#
##
##
#initialx0 <- 1.5#
## for(col in c(1:6)){#
#   for(row in c(1:6)){#
#      arrows(initialx0,#
#          t(tu)[row],#
#          initialx0,#
#          t(tl)[row],#
#          angle=90,#
#          length=.025,#
#          code=3)#
#   initialx0 <- initialx0+2#
# }#end-for#
#   initialx0 <- initialx0+1#
#}#end-for#
#
#
#
####################################################
### chunk number 5: #
####################################################
datameans <- c(564.4274, 701.4310, 705.9175, 571.8799, 477.3900, 424.8824)#
datatu <- c(616.4060, 783.5852, 781.8033, 632.7439, 521.1400, 460.9614)#
datatl <- c(512.4489, 619.2768, 630.0317, 511.0159, 433.6401, 388.8034)#
#
modeldatameans <- rbind(means,datameans)#
modeldatatu <- rbind(tu,datatu)#
modeldatatl <- rbind(tl,datatl)
a <- read.table("a.completed")#
b <- read.table("b.completed")#
c <- read.table("c.completed")#
d <- read.table("d.completed")#
e <- read.table("e.completed")#
f <- read.table("f.completed")#
#
#
colnames(a) <- c("trial","word","position","condition","RT")#
colnames(b) <- c("trial","word","position","condition","RT")#
colnames(c) <- c("trial","word","position","condition","RT")#
colnames(d) <- c("trial","word","position","condition","RT")#
colnames(e) <- c("trial","word","position","condition","RT")#
colnames(f) <- c("trial","word","position","condition","RT")#
#
data <- rbind(a,b,c,d,e,f)#
#
dim(a)#
dim(b)#
dim(c)#
dim(d)#
dim(e)#
dim(f)#
#
####################################################
### chunk number 2: #
####################################################
#
pos9data <- subset(data,position==9)#
#
data.abc <- rbind(a,b,c)#
#
data$trial <- as.factor(data$trial)#
#
means <- with(pos9data, tapply(RT,IND=list(condition),mean))#
stderr <- with(pos9data,tapply(RT,IND=list(condition),se))#
tn <- with(pos9data,tapply(RT,IND=list(condition),length))#
tu <- with(pos9data,means + qt(.975,df=tn-1) * stderr)#
tl <- with(pos9data,means - qt(.975,df=tn-1) * stderr)#
#
#
####################################################
### chunk number 3: #
####################################################
#
means <- means*1000#
tu <- tu*1000#
tl <- tl*1000#
#
#hack for now#
#tu[3] <- tu[2]#
#tl[3] <- tl[2]#
#means[3] <- means[2]#
#
#
#
####################################################
### chunk number 4: #
####################################################
#
cols <-  gray(0:5 / 5)#
#
# barplot(t(means),#
#          beside=TRUE, #
#          ylim=range(0,600),#
#          col=cols,#
#         main="Total reading time model",#
#         axisnames=FALSE,#
##         names.arg=paste(c("pos"),rep(1:10,1),sep=""),#
#         cex.names=1.2,cex.lab=1.2)#
##
##
#initialx0 <- 1.5#
## for(col in c(1:6)){#
#   for(row in c(1:6)){#
#      arrows(initialx0,#
#          t(tu)[row],#
#          initialx0,#
#          t(tl)[row],#
#          angle=90,#
#          length=.025,#
#          code=3)#
#   initialx0 <- initialx0+2#
# }#end-for#
#   initialx0 <- initialx0+1#
#}#end-for#
#
#
#
####################################################
### chunk number 5: #
####################################################
datameans <- c(564.4274, 701.4310, 705.9175, 571.8799, 477.3900, 424.8824)#
datatu <- c(616.4060, 783.5852, 781.8033, 632.7439, 521.1400, 460.9614)#
datatl <- c(512.4489, 619.2768, 630.0317, 511.0159, 433.6401, 388.8034)#
#
modeldatameans <- rbind(means,datameans)#
modeldatatu <- rbind(tu,datatu)#
modeldatatl <- rbind(tl,datatl)
#
 barplot(modeldatameans,#
          beside=TRUE, #
          ylim=range(0,800),#
#          col=cols,#
         main="TRT at PI: lf .26, noise .05, 800 runs",#
#         axisnames=FALSE,#
         names.arg=letters[1:6],#
         xlab=c("Conditions"),#
         cex.names=1.2,cex.lab=1.2)#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   #for(row in c(1:2)){ # for model then for data#
   for(row in c(2:2)){ # for model then for data#
      arrows(#
          #initialx0,#
          initialx0+1,#
          modeldatatu[row,col],#
          #initialx0,#
          initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   #initialx0 <- initialx0+1#
   initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
initialx0 <- 1.5#
 for(col in c(1:6)){  # for each condition#
   for(row in c(1:2)){ # for model then for data#
   #for(row in c(2:2)){ # for model then for data#
      arrows(#
          initialx0,#
          #initialx0+1,#
          modeldatatu[row,col],#
          initialx0,#
          #initialx0+1,#
          modeldatatl[row,col],#
          angle=90+1,#
          length=.025,#
          code=3)#
   initialx0 <- initialx0+1#
   #initialx0 <- initialx0+2#
 }#end-for#
   initialx0 <- initialx0+1#
}#end-for#
#
#
#
#
 legend(18,750,#
               legend=c("model data", "human data"),#
               fill=c(1,0),#
               xjust=1)
############
F=0.26#
noise=0.05#
MD=-0.6#
MP=1#
CC="on"#
runs=800#
emma="off"#
#
values <- data.frame(F,noise,MD,MP,CC,runs,rbind(means),emma,row.names=NULL)#
write.table(values,"../v6pred.data",sep="\t",row.names=FALSE,append=TRUE,col.names=FALSE)#
#v6pred <- exp1
t <- read.table("../v6pred.data",header=T)
t$noise <- as.numeric(t$noise)
t2 <- subset(t,emma=="off" & runs==800)[order(noise), ]
mytable <- t2[,c(1,2,7:12)]
mytable
nd <- read.table("../noisecomp.data",header=T)
nd
values
values
t
t2
nd <- read.table("../noisecomp.data",header=T)
nd
